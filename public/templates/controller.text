<?php

namespace App\Http\Controllers;

use App\Services\[SERVICE_NAME];
use Illuminate\Http\Request;

class [CONTROLLER_NAME] extends Controller
{
    protected $[SERVICE_VARIABLE_NAME];

    public function __construct()
    {
        $this->[SERVICE_VARIABLE_NAME] = new [SERVICE_NAME]();
    }

    public function index(Request $request)
    {
        $data = $request->all();
        $[MODEL_VARIABLE_NAME_PLURAL] = $this->[SERVICE_VARIABLE_NAME]->lists($data);

        $search = $request->search;

        return view("[VIEW_DIRECTORY].list", compact(["[MODEL_VARIABLE_NAME_PLURAL]", "search"]));
    }

    public function create(Request $request)
    {
        return view("[VIEW_DIRECTORY].create");
    }

    public function edit(Request $request, $id)
    {
        $[MODEL_VARIABLE_NAME_SINGULAR] = $this->[SERVICE_VARIABLE_NAME]->getById($id);
        return view("[VIEW_DIRECTORY].edit", compact(["[MODEL_VARIABLE_NAME_SINGULAR]"]));
    }

    public function save([CREATE_FORM_REQUEST] $request)
    {
        $validatedData = $request->all();

        $[MODEL_VARIABLE_NAME_SINGULAR] = $this->[SERVICE_VARIABLE_NAME]->createOrUpdate($validatedData);

        if(is_null($[MODEL_VARIABLE_NAME_SINGULAR]) === false){
            $message = message("Operation succeed.");
        }else{
            $message = message("Operation failed.", "error");
        }

        session()->flash("message", $message);
        return redirect()->back();
    }

    public function update([UPDATE_FORM_REQUEST] $request)
    {
        $validatedData = $request->all();

        $[MODEL_VARIABLE_NAME_SINGULAR] = $this->[SERVICE_VARIABLE_NAME]->createOrUpdate($validatedData);

        if(is_null($[MODEL_VARIABLE_NAME_SINGULAR]) === false){
            $message = message("Operation succeed.");
        }else{
            $message = message("Operation failed.", "error");
        }

        session()->flash("message", $message);
        return redirect()->back();
    }
    
    public function view(Request $request, $id)
    {
        $[MODEL_VARIABLE_NAME_SINGULAR] = $this->[SERVICE_VARIABLE_NAME]->getById($id);
        return view("[VIEW_DIRECTORY].view", compact(["user"]));
    }

    public function delete(Request $request, $id)
    {
        $[MODEL_VARIABLE_NAME_SINGULAR] = $this->[SERVICE_VARIABLE_NAME]->getById($id);

        $response = $this->[SERVICE_VARIABLE_NAME]->delete($[MODEL_VARIABLE_NAME_SINGULAR]);
        
        if($response === true){
            $message = message("Operation succeed.");
        }else{
            $message = message("Operation failed.", "error");
        }

        session()->flash("message", $message);
        return redirect()->back();
    }
}
